# YAML schema for GitHub Actions:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions
#
# Helpful YAML parser to clarify YAML syntax:
# https://yaml-online-parser.appspot.com/
#

name: PyPI Build Single Platform & Python Version Adapters

on:
  workflow_dispatch:
    inputs:
      source-run-id:
        description: 'The Run ID of the workflow with the build artifacts'
        required: true
        type: string
      package-version:
        description: 'Package Version for the release tag (e.g., 0.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    # You need 'actions: read' to download artifacts from another run
    # and 'contents: write' to create the GitHub Release.
    permissions:
      actions: read
      contents: write
    steps:
      # Step 1: Download all artifacts from the specified workflow run
      - name: Download all wheel artifacts from previous run
        uses: actions/download-artifact@v4
        with:
          # Use the input to specify which run to get artifacts from
          run-id: ${{ github.event.inputs.source-run-id }}
          # The path where artifacts will be downloaded
          path: dist

      # Step 2: (Optional) Display the downloaded file structure
      - name: Display structure of downloaded files
        run: ls -R dist
      
      # Step 3: Create the GitHub Release and upload the assets
      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          # This glob pattern finds all .whl files in the subdirectories
          files: dist/**/*.whl
          prerelease: true
          # Use the input to create the correct tag
          tag_name: adapter-v${{ github.event.inputs.package-version }}
